(()=>{
  let n="difyChatbotConfig",
      a="dify-chatbot-bubble-button",
      c="dify-chatbot-bubble-window",
      p=window[n],
      h={
        open:`<img id="openIcon" src="nicochan.png" alt="ニコちゃん" style="width:100%; height:100%;">`,
        close:`<img id="closeIcon" src="naki.png" alt="ニコちゃん泣き" style="width:100%; height:100%;">`
      };

  async function e(){
    if(p && p.token){
      const e = new URLSearchParams(await (async () => {
        const e = p?.inputs || {};
        let n = {};
        await Promise.all(Object.entries(e).map(async ([key, val]) => {
          const compressed = new Uint8Array(await new Response(
            new Blob([new TextEncoder().encode(val)]).stream()
              .pipeThrough(new CompressionStream("gzip"))
          ).arrayBuffer());
          n[key] = btoa(String.fromCharCode(...compressed));
        }));
        return n;
      })());

      let o = `${p.baseUrl || `https://${p.isDev ? "dev." : ""}udify.app`}/chatbot/${p.token}?` + e;

      function i(){
        let e, t;
        if(window.innerWidth > 640){
          e = document.getElementById(c);
          t = document.getElementById(a);
          if(e && t){
            let r = t.getBoundingClientRect();
            if(r.top - 5 > e.clientHeight){
              e.style.bottom = "0px";
              e.style.top = "unset";
            } else {
              e.style.bottom = "unset";
              e.style.top = "0px";
            }
            if(r.right > e.clientWidth){
              e.style.right = "0";
              e.style.left = "unset";
            } else {
              e.style.right = "unset";
              e.style.left = 0;
            }
          }
        }
      }

      function t(){
        let n = document.createElement("div");
        Object.entries(p.containerProps || {}).forEach(([e, t]) => {
          if("className" === e) n.classList.add(...t.split(" "));
          else if("style" === e) typeof t === "object" ? Object.assign(n.style, t) : n.style.cssText = t;
          else if(typeof t === "function") n.addEventListener(e.replace(/^on/, "").toLowerCase(), t);
          else n[e] = t;
        });
        n.id = a;

        let styleEl = document.createElement("style");
        document.head.appendChild(styleEl);
        styleEl.sheet.insertRule(`#${n.id} {
          position: fixed;
          bottom: var(--${n.id}-bottom, 1rem);
          right: var(--${n.id}-right, 1rem);
          left: var(--${n.id}-left, unset);
          top: var(--${n.id}-top, unset);
          width: var(--${n.id}-width, 48px);
          height: var(--${n.id}-height, 48px);
          border-radius: var(--${n.id}-border-radius, 25px);
          background-color: var(--${n.id}-bg-color, #155EEF);
          box-shadow: var(--${n.id}-box-shadow, rgba(0, 0, 0, 0.2) 0px 4px 8px 0px);
          cursor: pointer;
          z-index: 2147483647;
        }`);

        let t = document.createElement("div");
        t.style.cssText = "position: relative; display: flex; align-items: center; justify-content: center; width: 100%; height: 100%; z-index: 2147483647;";
        t.innerHTML = h.open;
        n.appendChild(t);
        document.body.appendChild(n);

        n.addEventListener("click", function(){
          let e = document.getElementById(c);
          if(e){
            e.style.display = e.style.display === "none" ? "block" : "none";
            localStorage.setItem("chatWidgetOpen", e.style.display);
            t.innerHTML = e.style.display === "none" ? h.open : h.close;
            e.style.display === "none" ? document.removeEventListener("keydown", d) : document.addEventListener("keydown", d);
            i();
          } else {
            let e = document.createElement("iframe");
            e.allow = "fullscreen;microphone";
            e.title = "dify chatbot bubble window";
            e.id = c;
            e.src = o;
            e.style.cssText = `
              position: absolute;
              display: flex;
              flex-direction: column;
              justify-content: space-between;
              left: unset;
              right: 0;
              bottom: 0;
              width: 24rem;
              max-width: calc(100vw - 2rem);
              height: 43.75rem;
              max-height: calc(100vh - 6rem);
              border: none;
              z-index: 2147483640;
              overflow: hidden;
              user-select: none;
            `;            
            n.prepend(e);
            i();
            this.title = "Exit (ESC)";
            t.innerHTML = h.close;
            localStorage.setItem("chatWidgetOpen", "block");
            document.addEventListener("keydown", d);
          }
        });

        if(p.draggable){
          let s = n, l = p.dragAxis || "both", i = false, d, r;
          s.addEventListener("mousedown", function(e){
            i = true;
            d = e.clientX - s.offsetLeft;
            r = e.clientY - s.offsetTop;
          });
          document.addEventListener("mousemove", function(e){
            if(i){
              s.style.transition = "none";
              s.style.cursor = "grabbing";
              let t = document.getElementById(c);
              if(t){
                t.style.display = "none";
                s.querySelector("div").innerHTML = h.open;
              }
              let x = e.clientX - d;
              let y = window.innerHeight - e.clientY - r;
              let bounds = s.getBoundingClientRect();
              let maxX = window.innerWidth - bounds.width;
              let maxY = window.innerHeight - bounds.height;
              if(l !== "y") s.style.setProperty(`--${a}-left`, Math.max(0, Math.min(x, maxX)) + "px");
              if(l !== "x") s.style.setProperty(`--${a}-bottom`, Math.max(0, Math.min(y, maxY)) + "px");
            }
          });
          document.addEventListener("mouseup", function(){
            i = false;
            s.style.transition = "";
            s.style.cursor = "pointer";
          });
        }
      }

      if(o.length > 2048) console.error("The URL is too long, please reduce the number of inputs to prevent the bot from failing to load");
      if(!document.getElementById(a)) t();
    } else {
      console.error(n + " is empty or token is not provided");
    }
  }

  function d(e){
    if(e.key === "Escape"){
      let iframe = document.getElementById(c);
      let button = document.getElementById(a);
      if(iframe && iframe.style.display !== "none"){
        iframe.style.display = "none";
        button.querySelector("div").innerHTML = h.open;
      }
    }
  }

  document.addEventListener("keydown", d);

  if(p?.dynamicScript || document.readyState !== "loading"){
    e();
  } else {
    document.addEventListener("DOMContentLoaded", e);
  }
})();
